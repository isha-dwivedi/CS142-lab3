#include<iostream>
using namespace std;

class node{
    public:
    //data
    int data;
    //pointer to next nodw
    node *next;
    //constructor that makes pointer to nul
    node(int value){
        data=value;
        next=NULL;
    }
    
};
class CLL{
    public:
    node *head;
    CLL(){
        head=NULL;
    }
    
    //function to insert
    void insert(int value){
        //to crete a new node
    node * temp=new node(value);
        //check if list empty
        if(head==NULL)
        head=temp;
        //inserting at end
        else{
            node *current=head;
            while(current->next!=head)
                current=current->next;
                current->next=temp;
        }
        temp->next=head;
    }
    
    //insert at
    void insertat(int pos, int value){
        int i=1;
        node *temp= new node(value);
        node * current=head;
        while(i<pos){
             i++;
            current=current->next;
           
        }
         
        temp->next=current->next;
        current->next=temp;
       
        
    }
    
    //delete function
    void Delete(){
        node *current=head;
        node *temp;
        while(current->next!=head){
            current=current->next;
        }
        current=temp;
        
    }
    //display function
    void display(){
        node * current=head;
        //check if list is empty
        if(current == NULL) {
            cout << "No elements " << endl;
            return;
        }
        //if elements exist..display
        else{
        while(current->next!=head){
             cout<<current->data<<"->";
            current=current->next;
           
        }
        //diplaying the last element
        cout<<current->data<<"->"<<endl;
        
    }
    }

    
};

int main()
{ CLL c;
c.insert(1);
c.insert(2);
c.insert(3);
c.insert(4);
c.insert(5);
c.display();
c.insertat(2,8);
c.display();
    
}
